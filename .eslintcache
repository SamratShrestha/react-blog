[{"/mnt/sam/programming/react/blog/src/index.js":"1","/mnt/sam/programming/react/blog/src/Navbar.js":"2","/mnt/sam/programming/react/blog/src/App.js":"3","/mnt/sam/programming/react/blog/src/BlogList.js":"4","/mnt/sam/programming/react/blog/src/Home.js":"5","/mnt/sam/programming/react/blog/src/Form.js":"6","/mnt/sam/programming/react/blog/src/LiftingState.js":"7"},{"size":220,"mtime":1610129225780,"results":"8","hashOfConfig":"9"},{"size":287,"mtime":1610129132106,"results":"10","hashOfConfig":"9"},{"size":414,"mtime":1610421186298,"results":"11","hashOfConfig":"9"},{"size":562,"mtime":1610132537879,"results":"12","hashOfConfig":"9"},{"size":1403,"mtime":1610132535946,"results":"13","hashOfConfig":"9"},{"size":2457,"mtime":1610394648851,"results":"14","hashOfConfig":"9"},{"size":2438,"mtime":1610423555783,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1xdzo68",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/sam/programming/react/blog/src/index.js",[],["32","33"],"/mnt/sam/programming/react/blog/src/Navbar.js",[],"/mnt/sam/programming/react/blog/src/App.js",[],"/mnt/sam/programming/react/blog/src/BlogList.js",[],"/mnt/sam/programming/react/blog/src/Home.js",[],"/mnt/sam/programming/react/blog/src/Form.js",["34","35"],"import React, {useState} from 'react';\nclass ControlledForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            age:'',\n            textarea:'',\n            country:'nepal',\n            // country:['nepal','china','india'],\n            checked:true\n        };\n        this.handleChange = this.handleChange.bind(this);\n        // this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSubmit = (event) => {\n        alert('The output is '+this.state.age+ this.state.textarea+this.state.country);\n        event.preventDefault();\n    }\n    handleChange(event){\n        const target = event.target;\n        const value = target.type == \"checkbox\"?target.checked:target.value\n        const name = target.name;\n        this.setState({[name]:value});\n    }\n    render(){\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <input type=\"number\" name=\"age\" value={this.state.age} onChange={(event) => this.handleChange(event)} placeholder=\"Enter Age\"/>\n                <br />\n                <textarea name=\"textarea\" value={this.state.textarea} onChange={this.handleChange} placeholder=\"Text area\"/>\n                <br />\n            {/* <select multiple={true} onChange={this.handleChange} value={this.state.country}> */}\n                <select name=\"country\" onChange={this.handleChange} value={this.state.country}>\n                    <option value=\"nepal\">Nepal</option>\n                    <option value=\"china\">China</option>\n                    <option value=\"india\">India</option>\n                </select>\n                <br />\n                <input name=\"checkbox\" type=\"checkbox\" checked={this.state.checkbox} onChange={this.handleChange}/>\n                <br />\n                <input type=\"submit\" value=\"submit\" />\n            </form>\n        )\n    }\n}\nconst UncontrolledForm = (props)=>{\n    const input = React.createRef();\n    const fileInput = React.createRef();\n    const handleSubmit = (event)=>{\n        alert('Name: '+input.current.value);\n        alert(`Selected file +${fileInput.current.files[0].name}`)\n        event.preventDefault();\n    };\n    return(\n        <form onSubmit={(event)=>handleSubmit(event)}>\n            <input defaultValue=\"test\" type=\"text\" ref={input} />\n            <input type=\"file\" ref={fileInput} />\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n    )\n}\nexport {ControlledForm,UncontrolledForm};\n","/mnt/sam/programming/react/blog/src/LiftingState.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":16,"nodeType":"42","messageId":"43","endLine":1,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":21,"column":35,"nodeType":"46","messageId":"47","endLine":21,"endColumn":37},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]